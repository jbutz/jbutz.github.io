{"version":3,"sources":["js/index.js"],"names":["mainContent","document","querySelector","innerHTML","mainEl","firstChild","removeChild","pageContainer","contentShadow","shadowRoot","createShadowRoot","createElement","querySelectorAll","forEach","el","appendChild","cloneNode","templateEl","pageNavigate","url","doPushState","undefined","pageURL","fetch","then","response","text","responseHtml","templateMain","content","getElementById","className","id","importNode","window","scrollTo","modifyLinks","titleEl","history","pushState","href","getElementsByTagName","catchClick","e","preventDefault","this","pathname","element","addEventListener","body","onpopstate","state"],"mappings":"CAAC,WAKG,IAHA,GAAIA,GAAcC,SAASC,cAAc,SAASC,UAE9CC,EAASH,SAASC,cAAc,SAC7BE,EAAOC,YACVD,EAAOE,YAAYF,EAAOC,WAG9B,IAAIE,GAEAC,EAAgBP,SAASC,cAAc,SAASO,UAC/CD,GAaDD,EAAgBC,EAAcN,cAAc,QAZ5CM,EAAgBP,SAASC,cAAc,SAASQ,mBAGhDH,EAAgBN,SAASU,cAAc,OACvCJ,EAAcJ,UAAYH,EAE1BC,SAASW,iBAAiB,iCAAiCC,QAAQ,SAAUC,GACzEN,EAAcO,YAAYD,EAAGE,eAGjCR,EAAcO,YAAYR,GAO9B,IAAIU,GAAahB,SAASU,cAAc,YAIpCO,EAAe,SAAUC,EAAKC,GAC9BA,EAA8BC,SAAhBD,GAAmCA,CAEjD,IAAIE,GAAUH,CAEdI,OAAMD,GACDE,KAAK,SAAUC,GACZ,MAAOA,GAASC,SAEnBF,KAAK,SAAUG,GAIZ,IAFAV,EAAWd,UAAYwB,EAEhBpB,EAAcF,YACjBE,EAAcD,YAAYC,EAAcF,WAG5C,IAAIuB,GAAeX,EAAWY,QAAQC,eAAe,OAUrD,OATAF,GAAaG,UAAY,GACzBH,EAAaI,GAAK,GAElBzB,EAAcQ,YAAYd,SAASgC,WAAWL,GAAc,IAE5DM,OAAOC,SAAS,EAAG,GAEnBC,EAAY5B,IAEL,IAEVgB,KAAK,WACF,GAAIJ,EAAa,CAEb,GAAIiB,GAAUpB,EAAWY,QAAQ3B,cAAc,QAC/CgC,QAAOI,QAAQC,WACXC,KAAMlB,GACPe,EAAQlC,WAAa,GAAImB,GAG5BrB,SAASwC,qBAAqB,SAAS,GAAGtC,UAAYkC,EAAQlC,cAK1EuC,EAAa,SAAUC,GAMvB,MAJAA,GAAEC,iBAEF1B,EAAa2B,KAAKC,UAAYD,KAAKL,OAE5B,GAGPJ,EAAc,SAAUW,GACxBA,EAAQnC,iBAAiB,gBAAgBC,QAAQ,SAAUC,GACvDA,EAAGkC,iBAAiB,QAASN,KAIrCN,GAAYnC,SAASgD,MACrBb,EAAY5B,GAIZ0B,OAAOgB,WAAa,SAAUP,GAEtBA,EAAEQ,OAASR,EAAEQ,MAAMX,MACnBtB,EAAayB,EAAEQ,MAAMX,MAAM","file":"index.js","sourcesContent":["(function () {\n    // Grab our main content\n    var mainContent = document.querySelector('#main').innerHTML;\n    // Remove the main content\n    var mainEl = document.querySelector('#main');\n    while (mainEl.firstChild) {\n        mainEl.removeChild(mainEl.firstChild);\n    }\n    // Create a div to use in the shadow dom and fill it\n    var pageContainer;\n    // Summon the shadow (dom)\n    var contentShadow = document.querySelector('#main').shadowRoot;\n    if (!contentShadow) {\n        contentShadow = document.querySelector('#main').createShadowRoot();\n\n        // Create a div to use in the shadow dom and fill it\n        pageContainer = document.createElement('div');\n        pageContainer.innerHTML = mainContent;\n        // Find and add our shadow styles\n        document.querySelectorAll('link[data-attr=\"shadow-page\"]').forEach(function (el) {\n            contentShadow.appendChild(el.cloneNode());\n        });\n        // Add our div to the shadow dom\n        contentShadow.appendChild(pageContainer);\n    } else {\n        pageContainer = contentShadow.querySelector('div');\n    }\n\n\n    // Create somewhere to hold loaded pages\n    var templateEl = document.createElement('template');\n\n\n\n    var pageNavigate = function (url, doPushState) {\n        doPushState = doPushState === undefined ? true : doPushState;\n        // Create our request and run it\n        var pageURL = url;\n        //var pageRequest = new Request(pageURL);\n        fetch(pageURL)\n            .then(function (response) {\n                return response.text();\n            })\n            .then(function (responseHtml) {\n                // Fill the template with our page html\n                templateEl.innerHTML = responseHtml;\n                // Clear the existing page content\n                while (pageContainer.firstChild) {\n                    pageContainer.removeChild(pageContainer.firstChild);\n                }\n                // Get the main content from the template\n                var templateMain = templateEl.content.getElementById('main');\n                templateMain.className = ''\n                templateMain.id = ''\n                // Move that content into the shadow dom\n                pageContainer.appendChild(document.importNode(templateMain, true));\n                // Scroll up to the top of the new page\n                window.scrollTo(0, 0);\n                // Setup our link-catcher\n                modifyLinks(contentShadow);\n\n                return true;\n            })\n            .then(function () {\n                if (doPushState) {\n                    // We got this far, update the URL\n                    var titleEl = templateEl.content.querySelector('title');\n                    window.history.pushState({\n                        href: pageURL\n                    }, titleEl.innerHTML || '', pageURL);\n\n                    // and title\n                    document.getElementsByTagName('title')[0].innerHTML = titleEl.innerHTML;\n                }\n            });\n    }\n\n    var catchClick = function (e) {\n        // Stop real link functionality\n        e.preventDefault();\n\n        pageNavigate(this.pathname || this.href);\n\n        return false;\n    };\n\n    var modifyLinks = function (element) {\n        element.querySelectorAll('a[href^=\"/\"]').forEach(function (el) {\n            el.addEventListener('click', catchClick);\n        });\n    }\n\n    modifyLinks(document.body);\n    modifyLinks(contentShadow);\n\n\n\n    window.onpopstate = function (e) {\n        debugger;\n        if (e.state && e.state.href) {\n            pageNavigate(e.state.href, false);\n        }\n    }\n\n} ());"]}